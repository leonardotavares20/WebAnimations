body {
  background-color: #1d1d1d;
  color: #fff;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  padding: 0;
  margin: 0;
}

.container {
  height: 50vh;
  overflow: auto;
  animation: changeBg linear;
  animation-timeline: scroll(block self);
  /* scroll-timeline: --container-timeline block; */
  /* scroll-timeline-name: --container;
  scroll-timeline-axis: block; */
  /* block/y - A animação será acionada pelo eixo de rolagem vertical (padrão na maioria dos sites).*/
  /* inline/x - A animação será acionada pelo eixo de rolagem horizontal (ex. menus de navegação).*/
  /* both - A animação será acionada pelo eixo de rolagem vertical e pelo eixo de rolagem horizontal.*/
  background-color: #100e1e;
}

.content {
  padding: 30px;
  max-width: 700px;
  margin: 0 auto;
}

.square {
  width: 100px;
  height: 100px;
  background-color: gold;
  animation: linear move both;
  /* animation-timeline: --container-timeline; */
  /* a funcao de scroll recebe o parametro de axis a ser usado, e um parametro que define qual vai ser o elemento que ele vai ter como referencia. nesse caso o parametro nearest define que o elemento mais proximo a ter um scroll sera utilizado como referencia, ou outro parametro para ter um elemento como referencia, seria o parametro root, que define que o root html sera utilizado como referencia, e tambem tem o parametro self, que define que o proprio elemento sera utilizado como referencia, mas ai ele precisa que ele mesmo tenha um scroll
  se nao for passando nenhum parametro o default vai ser o block e nearest
  */
  animation-timeline: scroll();
  animation-range: 20% 80%; /* a propriedade tambem aceita atributos com pixel ou outras unidades */
  animation-range: 20% normal; /* 20% a 100% */ 
  animation-range: 50%; /* 50% a 100% */ 
  /* animation-timeline: scroll(block root); */
  /* animation-timeline: scroll(block nearest); */
  /* animation-timeline: scroll(block self); */
  position: sticky;
  top: 0;
}

@keyframes move {
  to {
    transform: translateX(calc(100vw - 100px));
  }
}

@keyframes changeBg {
  to {
    background-color: black;
  }
}
